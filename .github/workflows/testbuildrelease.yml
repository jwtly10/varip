name: Test, Build and Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.22.x'
      - name: Test
        run: |
          go test ./...

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.22.x'
      - name: Build Binary
        run: |
          GOOS=linux GOARCH=amd64 go build -o build/varip-linux-amd64 .
          GOOS=darwin GOARCH=amd64 go build -o build/varip-darwin-amd64 .
          GOOS=windows GOARCH=amd64 go build -o build/varip-windows-amd64.exe .
          GOOS=darwin GOARCH=arm64 go build -o build/varip-darwin-arm64 .
      - uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: build/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Bump version and push tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: minor
          RELEASE_BRANCHES: main
      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: build/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.tag }}
          release_name: Release ${{ steps.tag_version.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/varip-linux-amd64
          asset_name: varip-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/varip-darwin-amd64
          asset_name: varip-darwin-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/varip-windows-amd64.exe
          asset_name: varip-windows-amd64.exe
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/varip-darwin-arm64
          asset_name: varip-darwin-arm64
          asset_content_type: application/octet-stream
